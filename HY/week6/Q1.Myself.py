#Q1. 역사 문제를 하나 내보겠습니다. 고려시대와 조선시대 왕 이름 중에서 고려에도 있고 조선에도 있는 이름은 몇개 일까요? 한 번에 딱 안 떠오른다면 왕 이름을 드릴테니 파이썬 함수로 만들어서 출력 해봅시다.

#😲조건1 - 중복되는 왕 이름 출력
#😲조건2 - 중복되는 왕 이름의 수 출력

# 왕이름
#korea_king = "태조,혜종,정종,광종,경종,성종,목종,현종,덕종,정종,문종,순종,선종,헌종,숙종,예종,인종,의종,명종,신종,희종,강종,고종,원조,충렬왕,충선왕,충숙왕,충혜왕,충목왕,충정왕,공민왕,우왕,창왕,공양왕"
#chosun_king = "태조,정종,태종,세종,문종,단종,세조,예종,성종,연산군,중종,인종,명종,선조,광해군,인조,효종,현종,숙종,경종,영조,정조,순조,헌종,철종,고종,순종"

#✅출력 예시

#king(korea_king, chosun_king)
#조선과 고려에 모두 있는 왕 이름 : 태조
#조선과 고려에 모두 있는 왕 이름 : 정종
#조선과 고려에 모두 있는 왕 이름 : 경종
#조선과 고려에 모두 있는 왕 이름 : 성종
#조선과 고려에 모두 있는 왕 이름 : 현종
#조선과 고려에 모두 있는 왕 이름 : 문종
#조선과 고려에 모두 있는 왕 이름 : 순종
#조선과 고려에 모두 있는 왕 이름 : 헌종
#조선과 고려에 모두 있는 왕 이름 : 숙종
#조선과 고려에 모두 있는 왕 이름 : 예종
#조선과 고려에 모두 있는 왕 이름 : 인종
#조선과 고려에 모두 있는 왕 이름 : 명종
#조선과 고려에 모두 있는 왕 이름 : 고종
#조선과 고려에 모두 있는 왕 이름은 총 13개 입니다

##########################################
#                MY RULE                 #
##########################################

# step 1 . 각 시대 왕의 이름(key)과 value값을 저장할 튜플과 각 시대에 모두 있는 왕 이름을 저장할 리스트를 만든다.

# step 2. 고려 왕, 조선 왕이 나열된 문자열을 split한다.

# step 3. for문으로 고려시대 왕 리스트에 있는 각 왕의 이름에 value값 1을 지정해 튜플에 저장한다.
#         -> 'counts.get(name, 0)+1'을 사용 // Ex) 만약 고려시대 내에 중복된 왕 이름이 3개라면 튜플 내에서 해당 key의 value값은 3이 된다.

# step 4. for문으로 조선시대 왕 리스트에 있는 각 왕의 이름에 value값 10000을 지정해 튜플에 저장한다.
#         -> 'counts.get(name, 0)+1'을 사용 // Ex) 만약 조선시대 내에 중복된 왕 이름이 3개라면 튜플 내에서 해당 key의 value값은 30000이 된다.
#         -> ★ value값을 10000으로 설정한 이유는 각 시대 내에서 중복된 이름을 가진 왕의 수를 최대 9999명까지 고려하기 위함임.

# step 5. 어떤 왕 이름이 고려시대와 조선시대 모두 있는 경우 튜플의 밸류 값은 c000k이 된다(c=조선시대, k=고려시대 // c>1, k>1). 따라서 튜플의 value값의 길이가 5개 이상인 경우(조선시대에 왕 이름 존재), 그리고 튜플의 value값의 뒤에서 네 자리의 수가 1 이상인 경우(고려시대에 왕 이름 존재)에 해당 왕 이름(key)을 리스트에 저장한다.

# step 6. for문으로 리스트의 원소와 원소 갯수를 출력한다.

##########################################

kking = "태조,혜종,정종,광종,경종,성종,목종,현종,덕종,정종,문종,순종,선종,헌종,숙종,예종,인종,의종,명종,신종,희종,강종,고종,원조,충렬왕,충선왕,충숙왕,충혜왕,충목왕,충정왕,공민왕,우왕,창왕,공양왕"
cking = "태조,정종,태종,세종,문종,단종,세조,예종,성종,연산군,중종,인종,명종,선조,광해군,인조,효종,현종,숙종,경종,영조,정조,순조,헌종,철종,고종,순종"

def king(kking, cking) :
  # step 1.--------------------------------
  counts = {}
  countsDouble = []
  # ---------------------------------------


  # step 2.--------------------------------
  kkingSplit = kking.split(",")
  ckingSplit = cking.split(",")
  # ---------------------------------------

  # step 3, 4. ----------------------------
  for name in kkingSplit :
    counts[name] = counts.get(name, 0) + 1

  for name in ckingSplit :
    counts[name] = counts.get(name, 0) + 10000
  # ---------------------------------------

  # step 5.--------------------------------
  for key in counts :
    if len(str(counts[key])) >= 5 :
      if int(str(counts[key])[-4:]) >= 1 :
        countsDouble.append(key)
  # ---------------------------------------

  # step 6.--------------------------------
  for name in countsDouble : 
    print('고려와 조선에 모두 있는 왕 이름 :', name)
  print('조선과 고려에 모두 있는 왕 이름은 총', len(countsDouble), '개 입니다.')
  # ---------------------------------------

king(kking,cking)